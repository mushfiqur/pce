int main(){
	BasisPolySet basis_poly = BasisPolySet(UNIFORM);
	
	// Define Netlist
	input_node eps(&basis_poly, 1, "eps");

	const_node c1(&basis_poly, "c1");
	const_node c2(&basis_poly, "c2");

	mult_node a(&basis_poly, "a");
	mult_node b(&basis_poly, "b");
	mult_node c(&basis_poly, "c");
	mult_node d(&basis_poly, "d");

	mult_node e(&basis_poly, "e");
	mult_node f(&basis_poly, "f");
	sub_node g(&basis_poly, "g");

	// Connect/Init Netlist
	c1.init(10.0);
	c2.init(1.0);
	a.init(&eps, &c1);
	b.init(&eps, &c1);
	c.init(&eps, &c2);
	d.init(&eps, &c2);
	e.init(&a, &b);
	f.init(&c, &d);
	g.init(&e, &f);

	// Generate Basis Polynomials
	basis_poly.generate_polys(3);

	basis_poly.print();
	return 0;

	//// Set up Simulator
	Simulator sim = Simulator();
	sim.add_basis_poly_set(basis_poly);

	// Add nodes to simulator
	sim.add_node(eps);
	sim.add_node(c1);
	sim.add_node(c2);
	sim.add_node(a);
	sim.add_node(b);
	sim.add_node(c);
	sim.add_node(d);
	sim.add_node(e);
	sim.add_node(f);
	sim.add_node(g);

//	why is it that with only three nodes, it will come up with shit like
// (2.36175e-16) { 
//         eps: 31, 
//         e: 31, 
//         f: 31
// }
	// Set bitwidths
	sim.set_bitwidth(eps, 32);
	sim.set_bitwidth(e, 32);
	sim.set_bitwidth(f, 32);
	sim.set_bitwidth(g, 32);

	sim.set_output_node(*g.tail);

	// Run Sim
	int tot_sim_steps = 1;
	// sim.set_sim_params(MONTE_CARLO, tot_sim_steps);
	// sim.run_sim(&pll_in);

	sim.set_sim_params(PCE, tot_sim_steps);
	sim.run_sim(&eps);

	std::cout << "\n(" << sim.curr_sol_noise_pwr << ") { \n";
	for(int i = 0; i < sim.curr_solution.size() - 1; i++){
		std::cout << "\t" << sim.curr_solution[i].n->label << ": " << sim.curr_solution[i].bitwidth << ", \n";
	}
	std::cout << "\t" << sim.curr_solution[sim.curr_solution.size() - 1].n->label << ": " << sim.curr_solution[sim.curr_solution.size() - 1].bitwidth << std::endl;
	std::cout << "}\n";



	return 0;
}